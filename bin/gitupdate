#!/usr/bin/env sh
HERE=`cd $(dirname $0); pwd`

__setcolor() {
  # turn color on zsh and cygwin
  if [ ! -z "$ZSH" ] || [ "$TERM" == "cygwin" ] || [ "$TERM" == "xterm" ]; then
    BRED="\033[01;31m"
    BBLUE="\033[01;34m"
    BGREEN="\033[01;32m"
    DEFAULT="\033[00m"
  else
    BRED=""
    BBLUE=""
    BGREEN=""
    DEFAULT=""
  fi
}

__git_update() {

  # switch color
  __setcolor

  # validate basedir
  if [ ! -d "$1" ]; then
    echo -e "$BRED$1$DEFAULT is not exists!"
    exit -1
  fi
  basedir=`cd $1; pwd`

  # check if all repositories are clean
  allrepos=()
  dirtyrepos=()
  for dotgit in `find $basedir -type d -name '.git'`; do
    repodir=`dirname $dotgit`
    allrepos+=("$repodir")
    cd $repodir
    if [ ! -z "$(git status --porcelain)" ]; then
      dirtyrepos+=("$repodir")
    fi
  done
  if [[ ${#dirtyrepos[@]} -ne 0 ]]; then
    echo "Find dirty repositories, please make them clean first!!!"
    local i=1
    for repo in ${dirtyrepos[@]}; do
      echo -e "[$i/${#dirtyrepos[@]}] $BBLUE==>$DEFAULT $BRED$repo$DEFAULT"
      (( i++ ))
    done
    exit -1
  fi

  # update all repositories
  echo -e "update $BGREEN${#allrepos[@]}$DEFAULT repositories in $BBLUE$basedir$DEFAULT"
  local i=1
  for repodir in ${allrepos[@]}; do
    cd $repodir
    echo -e "[$i/${#allrepos[@]}] $BBLUE==>$DEFAULT $BGREEN$repodir$DEFAULT"
    git pull
    (( i++ ))
  done
}

__help() {
  echo "usage: gitupdate <basedir>"
}


[ $# -ne 1 ] && __help || __git_update $1
